C251 COMPILER V5.60.0,  adc                                                                25/04/24  13:33:28  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE adc
OBJECT MODULE PLACED IN .\Out_flie\adc.obj
COMPILER INVOKED BY: D:\Keil_80251\C251\BIN\C251.EXE ..\LIB\libraries\adc.c XSMALL INTR2 BROWSE INCDIR(..\LIB\startup;..
                    -\LIB\libraries;..\LIB\peripheral;..\USER\inc) DEBUG PRINT(.\Listings\adc.lst) TABS(2) OBJECT(.\Out_flie\adc.obj) 

stmt  level    source

    1          
    2          /********************************************************************************************************
             -*************
    3           * @file          adc
    4           * @date          2024-03-06
    5           * @note    
    6           ********************************************************************************************************
             -************/
    7          
    8          
    9          #include "adc.h"
   10          #include "intrins.h"
   11          
   12          //-------------------------------------------------------------------------------------------------------
             -------------
   13          //  @brief      ADC初始化
   14          //  @param      adcn            选择ADC通道
   15          //  @param      speed         ADC时钟频率
   16          //  @return     void
   17          //  Sample usage:               adc_init(ADC_P10,ADC_SYSclk_DIV_2);//初始化P1.0为ADC功能,ADC时钟频率：SYS
             -clk/2
   18          //-------------------------------------------------------------------------------------------------------
             -------------
   19          void adc_init(ADCN_enum adcn,ADC_SPEED_enum speed)
   20          {
   21   1        ADC_CONTR |= 1<<7;        //1 ：打开 ADC 电源
   22   1        
   23   1        ADC_CONTR &= (0xF0);      //清除ADC_CHS[3:0] ： ADC 模拟通道选择位
   24   1        ADC_CONTR |= adcn;
   25   1        
   26   1        if((adcn >> 3) == 1) //P0.0
   27   1        {
   28   2          //IO口需要设置为高阻输入
   29   2          P0M0 &= ~(1 << (adcn & 0x07));
   30   2          P0M1 |= (1 << (adcn & 0x07));
   31   2        }
   32   1        else if((adcn >> 3) == 0) //P1.0  
   33   1        {
   34   2          //IO口需要设置为高阻输入
   35   2          P1M0 &= ~(1 << (adcn & 0x07));
   36   2          P1M1 |= (1 << (adcn & 0x07));
   37   2        }
   38   1      
   39   1        ADCCFG |= speed&0x0F;     //ADC时钟频率SYSclk/2/speed&0x0F;
   40   1        
   41   1        ADCCFG |= 1<<5;           //转换结果右对齐。 ADC_RES 保存结果的高 2 位， ADC_RESL 保存结果的低 8 位。
   42   1        
   43   1      //  ADCTIM = 0x3C;            //CSSETUP:0(准备时间) CSHOLD:01(保持时间) SMPDUTY:01110(采样时间)
   44   1      }
   45          
   46          
   47          //-------------------------------------------------------------------------------------------------------
             -------------
   48          //  @brief      ADC转换一次
   49          //  @param      adcn            选择ADC通道
   50          //  @param      resolution      分辨率
   51          //  @return     void
   52          //  Sample usage:               adc_once(ADC_P10, ADC_10BIT);
C251 COMPILER V5.60.0,  adc                                                                25/04/24  13:33:28  PAGE 2   

   53          //-------------------------------------------------------------------------------------------------------
             -------------
   54          uint16 adc_once(ADCN_enum adcn,ADCRES_enum resolution)
   55          {
   56   1        uint16 adc_value;
   57   1        
   58   1        ADC_CONTR &= (0xF0);      //清除ADC_CHS[3:0] ： ADC 模拟通道选择位
   59   1        ADC_CONTR |= adcn;
   60   1        
   61   1        ADC_CONTR |= 0x40;        // 启动 AD 转换
   62   1      //  while (!(ADC_CONTR & 0x20));    // 查询 ADC 完成标志
   63   1        ADC_CONTR &= ~0x20;       // 清完成标志
   64   1        
   65   1        adc_value = ADC_RES;        //存储 ADC 的 12 位结果的高 4 位
   66   1        adc_value <<= 8;
   67   1        adc_value |= ADC_RESL;      //存储 ADC 的 12 位结果的低 8 位
   68   1        
   69   1        ADC_RES = 0;
   70   1        ADC_RESL = 0;
   71   1        
   72   1        adc_value >>= resolution;   //取多少位
   73   1        
   74   1        return adc_value;
   75   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       135     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
